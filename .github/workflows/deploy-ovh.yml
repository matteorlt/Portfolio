name: Deploy Portfolio to OVH Git

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm run install-all
        
    - name: 🏗️ Build frontend
      run: npm run build:prod
      
    - name: 🧪 Verify build
      run: |
        if [ ! -d "client/dist" ]; then
          echo "❌ Build failed - dist folder not found"
          exit 1
        fi
        echo "✅ Build successful"
        echo "📊 Files: $(find client/dist -type f | wc -l)"
        echo "📊 Size: $(du -sh client/dist)"
        
    - name: 🚀 Deploy to OVH Git
      run: |
        echo "🚀 Deploying to OVH Git integration..."
        
        # Configuration Git pour OVH
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Ajouter le remote OVH Git
        git remote add ovh ${{ secrets.OVH_GIT_URL }} || true
        
        # Créer une branche de déploiement avec seulement les fichiers buildés
        git checkout -b deploy-$(date +%Y%m%d-%H%M%S)
        
        # Supprimer tout sauf client/dist
        find . -maxdepth 1 -not -name 'client' -not -name '.' -exec rm -rf {} +
        cd client
        find . -maxdepth 1 -not -name 'dist' -not -name '.' -exec rm -rf {} +
        cd ..
        
        # Déplacer le contenu de dist à la racine
        mv client/dist/* .
        rm -rf client
        
        # Commit et push vers OVH
        git add .
        git commit -m "Deploy portfolio $(date)"
        git push ovh HEAD:main --force
        
        echo "✅ Deployed to OVH Git!"
        
    - name: ✅ Success
      run: |
        echo "🎉 Portfolio déployé avec succès sur OVH Git !"
        echo "🌐 Site en ligne sur OVH"